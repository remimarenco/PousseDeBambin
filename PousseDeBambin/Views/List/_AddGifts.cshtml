@model PousseDeBambin.Models.List

<div id="manageList">
    <div class="mess_bienvenue_list">
        @if (!Model.UserProfile.UserName.Equals("Anonyme"))
        {
            <span id="bienvenueText">
                Bienvenue dans @Model.Name
                , l'enfant de @Model.UserProfile.FirstName
                @if (Model.BirthDate > DateTime.Now)
                {
                    <span>va naître</span>
                }
                else
                {
                    <span>est né</span>
                }
                le @Model.BirthDate.Day/@Model.BirthDate.Month/@Model.BirthDate.Year
            </span>
            if (Model.BirthDate > DateTime.Now)
            {
                TimeSpan span = Model.BirthDate - DateTime.Now;
                TimeSpan PartialDaysSpan = span.Add(new TimeSpan(1, 0, 0, 0));
                <span> : J-@PartialDaysSpan.Days avant l'arrivée de la petite pousse !</span>
            }
        }

        @{
    // Gestion du texte de description
    if (Model.UserProfile.UserName != "Anonyme")
    {

        <div data-toggle="tooltip" data-placement="bottom" title="@Model.Description" id="texteDescription">@Model.Description</div>
    }
}

        @if (Model.Gifts.Count == 0)
        {
            <div class="intro_list_titre">Bienvenue dans la création de votre liste !</div>
        }
        <div class="aide_list">
            @if (Model.Gifts.Count == 0)
            {
                <div class="intro_list"><span>1</span> - Commencez par entrer l'adresse url de votre premier objet, puis cliquez sur <span>"Rechercher"</span>!</div>
                <div class="intro_list"><span>2</span> - Pour ajouter un nouvel objet, cliquez simplement sur <span>"Ajouter un nouvel objet"</span></div>

            }
            @if (Model.UserProfile.UserName == "Anonyme")
            {
                <div class="intro_list"><span>3</span> - Il ne vous reste plus qu'à cliquer sur <span>"Valider ma liste"</span>, et la partager pour qu'elle soit visible par vos proches !</div>
            }
        </div>
        @if (Model.Gifts.Count == 0)
        {
            ***REMOVED*** url qui redirige vers "comment ça marche" youtube-->
            <a href="http://youtu.be/7a8mbMzDg0o" target="_blank" id="img_video" title="Comment ça marche?"></a>
        }
    </div>
    <table id="ListsGifts" class="table">
        @{
            string display = "";
            if (Model.Gifts.Count == 0)
            {
                display = "none";
            }
        }

        <tr id="headerTableGifts" style="display:@display;">
            <th class="cat_list_cadeau">Image</th>
            <th class="cat_list_cadeau">Objet</th>
            <th class="cat_list_cadeau">Prix</th>
            <th class="cat_list_cadeau">Gestion</th>
        </tr>
        ***REMOVED*** On affiche tous les cadeaux déjà entrés -->
        @Html.Action("DisplayGifts", "List", new { id = Model.ListId })

        @Html.Action("ValidationModule", "List", new { id = Model.ListId })

        <tr id="spacerBeforeCreateForm" class="spacer"></tr>

        @if (Model.UserProfile.UserName == "Anonyme" || User.Identity.IsAuthenticated && (User.Identity.Name == Model.UserProfile.UserName))
        {
            <tr id="createForm">
                @Html.Action("CreatePartialTwo", "Gift", new { listID = Model.ListId })
            </tr>
        }
        ***REMOVED*** On Success, on update en ajax la liste des gifts -->
    </table>

</div>


<div class="modal fade" id="giftWebSite" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="objectTitle">Modal title</h4>
            </div>
            <div class="modal-body">
                ***REMOVED*** Indiquer qu'il faut revenir ici pour valider l'achat de l'objet -->
                ***REMOVED*** Mettre nom de l'objet -->
                ***REMOVED*** Mettre l'adresse de livraison -->
                ***REMOVED*** Mettre l'url pour rediriger vers le site de l'url -->
                <p>@Model.UserProfile.FirstName vous remercie pour votre souhait d'achat ! N'oubliez pas de revenir sur cette page une fois l'objet acheté pour l'indiquer à @Model.UserProfile.FirstName et aux autres potentiels acheteurs !</p>

                <p>L'objet est : <span id="objectName"></span></p>
                <p>L'adresse de livraison est : <span id="shippingAddress"></span></p>

                <p id="pObjectUrl"><a id="objectUrl" href="#" data-url="" class="btn btn-success btn-lg" type="button"></a></p>

                ***REMOVED*** Mettre un formulaire pour entrer le nom de la personne et son message -->
                <div id="commentBuyObject">
                    <input type="text" id="inputName" required placeholder="Votre prénom et nom :)" />
                    <textarea id="inputMessage" placeholder="Un message pour @(Model.UserProfile.FirstName) :)"></textarea>
                </div>
            </div>
            <div class="modal-footer">
                <button id="buttonNotBought" type="button" class="btn btn-danger" data-dismiss="modal">Je n'ai pas acheté cet objet</button>
                <button id="buttonBought" type="button" class="btn btn-primary" data-giftid="" data-dismiss="modal">J'ai acheté cet objet !</button>
            </div>
        </div>
        ***REMOVED*** /.modal-content -->
    </div>
    ***REMOVED*** /.modal-dialog -->
</div>
***REMOVED*** /.modal -->
<script type="text/javascript">
    $(function () {
        $('#texteDescription').tooltip();
    });
    // Lorsqu'on clique pour acheter un cadeau => Redirection viglink
    $('#objectUrl').click(function () {
        vglnk.open($(this).data("url"), "_blank");
    });
    $('#buttonNotBought').click(
    );
    $('#buttonBought').click(function () {
        // Put the giftState to State.Bought
        $.ajax({
            url: '@Url.Action("ObjectBought", "GiftState")',
            dataType: 'html',
            data: { 'id': $(this).data("giftid"), 'buyerName': $('#inputName').val(), 'buyerText': $('#inputMessage').val() },
            type: 'POST',
            success: function (myData) {
                // Reload the span id = gift part
                $.ajax({
                    url: '@Url.Action("DisplayGiftState", "GiftState")',
                    dataType: 'html',
                    data: { 'id': myData },
                    type: 'GET',
                    success: function (data) {
                        $("#gift" + myData).empty();
                        $("#gift" + myData).append(data);
                    }
                });
            }
        });
    });

    $('.buyButton').click(function () {
        $('#objectTitle').empty();
        $('#objectTitle').text("Achat de l'objet : " + $(this).data("objectname"));

        $("#objectName").empty();
        $("#objectName").text($(this).data("objectname"));

        $("#shippingAddress").empty();
        $("#shippingAddress").text("@(Model.UserProfile.Street.ToString()), @(Model.UserProfile.Zipcode.ToString()) @(Model.UserProfile.City.ToString())");

        $("#objectUrl").empty();
        $('#objectUrl').data("url", $(this).data("url"));
        $("#objectUrl").text("J'achète " + $(this).data("objectname"));

        $('#buttonBought').data("giftid", $(this).data("id"));
        $('#giftWebSite').modal('show');
    });
</script>


<script>
    function refreshGiftsList() {
        var urlRefresh = "@Url.Action("DisplayGifts", "List", new { id = Model.ListId })";
        var request = $.ajax({
            type: "GET",
            url: urlRefresh,
            dataType: "json",
            complete: function (data, status) {
                // On rafraichit la liste des objets
                $("#headerTableGifts").nextUntil("#spacerBeforeCreateForm").replaceWith("");
                $("#headerTableGifts").after(data.responseText);
                manageValidation();
                checkIfGift();

            }
        });
    }

    function refreshGiftsListAddEffect() {
        var urlRefresh = "@Url.Action("DisplayGifts", "List", new { id = Model.ListId })";
        var request = $.ajax({
            type: "GET",
            url: urlRefresh,
            dataType: "json",
            complete: function (data, status) {
                // On rafraichit la liste des objets
                $("#headerTableGifts").nextUntil("#spacerBeforeCreateForm").replaceWith("");
                $("#headerTableGifts").after(data.responseText);
                addGiftEffect();
                manageValidation();
                checkIfGift();
            }
        });
    }

    // Fonction qui permet de répondre à de l'ajax sur la gestion de liste vide de cadeau ou non
    // Fonction qui n'affiche les th que si il existe au moins un cadeau
    function checkIfGift() {
        if ($(".fond_cadeaux").length != 0) {
            $("#headerTableGifts").show();
        }
        else {
            $("#headerTableGifts").hide();
        }
    }

    function addGiftEffect() {
        // On prends la dernière row et on lui met un fadein
        $(".fond_cadeaux").last().hide().fadeIn(1500);
    }

    function deleteGiftEffect() {
        // On prends la dernière row et on lui met un fadein
        $(".fond_cadeaux").last().fadeOut(500);
    }

    function manageValidation() {
        var urlValidate = "@Url.Action("ValidationModule", "List", new { id = Model.ListId })";
        var request = $.ajax({
            type: "GET",
            url: urlValidate,
            dataType: "json",
            complete: function (data, status) {
                // On affiche la validation
                if (data.responseText != "") {
                    if (!$("#validationRow").length) {
                        $("#spacerBeforeCreateForm").before(data.responseText);
                    }
                }
                else {
                    if ($("#validationRow").length) {
                        $("#spacerValidation").remove();
                        $("#validationRow").remove();
                    }
                }
            }
        });
    }

    window.onbeforeunload = function () {
        var NotValidated = '@Model.UserProfile.UserName.Equals("Anonyme")';
        if (NotValidated != 'False') {
            return "Attention ! Votre liste sera perdue si vous quittez la page maintenant...pour éviter cela, il vous suffit de cliquer sur le bouton 'Je valide ma liste'";
        }
    };
</script>
