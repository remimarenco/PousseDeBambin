@model PousseDeBambin.Models.Gift

***REMOVED*** On fait un formulaire ajax de création d'objet. -->
<td class="divObjectImage">
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    @Html.HiddenFor(model => model.ListID)

    <div class="createObjectImage">
    @Html.LabelFor(model => model.ImageUrl)
        @Html.ValidationMessageFor(model => model.ImageUrl)
        @Html.TextBoxFor(model => model.ImageUrl, new { @class = "manageImageUrl" })
        <img id="displayImage" src="@Model.ImageUrl" class="divObjectImage" />
    </div>
</td>
    
<td class="divObjectGift">
    <div class="divObjectWebsite createObjectGift">
        <p class="ajout_cadeau">Ajout d'un nouveau cadeau !</p>
        <div>
            @Html.LabelFor(model => model.WebSite)
        </div>
        @Html.ValidationMessageFor(model => model.WebSite)
        @Html.TextBoxFor(modelItem => Model.WebSite)
        <a href="#" id="btnCreateSearchObject" class="btn btn-primary btn-sm" role="button">
            Rechercher
        </a>
        <a href="#" id="btnStopCreateSearchObject">
            <img id="createAjaxLoading" class="ajaxLoadingGift" src="/Content/img/loading/ajax-loader.gif" alt="Loading" />
            Arrêter la recherche
        </a>
        <p class="texte_fonction_recherche">Ce bouton vous permet de rechercher automatiquement les informations liées à l'objet.</p>
    </div>
    <div class="divObjectName createObjectName">
        <div>
            @Html.LabelFor(model => model.Name, new { @class = "objectNameLabel" })
        </div>
        @Html.ValidationMessageFor(model => model.Name)
        @Html.TextBoxFor(modelItem => Model.Name)
    </div>
    <div class="divObjectDescription createObjectDescription">
        <div>
            @Html.LabelFor(model => model.Description)
        </div>
        @Html.ValidationMessageFor(model => model.Description)
        @Html.TextAreaFor(modelItem => Model.Description)
    </div>
</td>
<td class="divObjectPrice">
    <div class="createObjectPrice">
    @Html.LabelFor(model => model.Price)
        @Html.ValidationMessageFor(model => model.Price)
    <p class="textWithoutWrap">@Html.TextBoxFor(modelItem => Model.Price)</p>
    </div>
</td>
<td class="divAddObjec">
    <div id="giftInfos" class="createAddObject">
        <div>
            <input id="btnCreateGift" type="submit" value="Valider l'objet" />
        </div>
    </div>
</td>

<script>
    $(document).ready(function () {
        $("#btnCreateGift").click(function () {
            submitAddGift();
        });

        function submitAddGift() {
            $.ajax({
                url: "@Url.Action("CreatePartialTwo", "Gift")",
                data: {
                    ListID: "@Model.ListID",
                    ImageUrl: $("#ImageUrl").val(),
                    WebSite: $("#WebSite").val(),
                    Name: $("#Name").val(),
                    Description: $("#Description").val(),
                    Price: $("#Price").val()
                },
                type: "POST",
                content: 'application/json; charset=utf-8',
                datatype: 'json',
                success: function (data) {
                    $("#createForm").html(data);
                    refreshGiftsList();
                }
            });
        }
    });

    ////--------------- Gestion Diffbot --------////

    //Gestion de la visibility
    jQuery.fn.visible = function () {
        return this.css('visibility', 'visible');
    };

    jQuery.fn.invisible = function () {
        return this.css('visibility', 'hidden');
    };

    jQuery.fn.visibilityToggle = function () {
        return this.css('visibility', function (i, visibility) {
            return (visibility == 'visible') ? 'hidden' : 'visible';
        });
    };

    // Gestion diffbot
    $(function () {
        var searchAjax = null;
        // On init les boutons de recherche
        InitSearch();

        // Lorsque l'on clique sur le bouton d'arret de la recherche
        $("#btnStopCreateSearchObject").click(function () {
            if (searchAjax) {
                // On annule la requete de recherche
                searchAjax.abort();
                searchAjax = null;

                // On réaffiche le bouton de recherches
                SearchTerminate();
            }
        });

        // Lorsque l'on clique sur le bouton de recherche de l'objet en création
        $("#btnCreateSearchObject").click(function () {
            // On affiche le bouton pour stopper la recherche
            Search();

            // We get the website
            var website = $('#WebSite').val();

            // Loading
            searchAjax = $.ajax({
                url: 'http://api.diffbot.com/v2/product',
                data: { 'token': '2d5a54f7471c7958ae0c4d3dcdcd5592', 'url': website },
                dataType: 'jsonp',
                jsonpCallback: "localJsonpCallback",
                type: 'GET',
                timeout: 8000,
                success: function (data) {
                    try {
                        // Fill all variables with returned values
                        var amount = ('amount' in data.products[0].offerPriceDetails) ? data.products[0].offerPriceDetails.amount : '0';
                        var link = ('link' in data.products[0].media[0]) ? data.products[0].media[0].link : '';
                        var title = ('title' in data.products[0]) ? data.products[0].title : '';
                        var description = ('description' in data.products[0]) ? data.products[0].description : '';

                        // Fill all divs with the return of the data

                        // Normalisation du prix en FR
                        var amountNormalizedFr = normalize(amount);

                        // ImageUrl
                        $("#ImageUrl").val(link);
                        // Price
                        $("#Price").val(amountNormalizedFr);
                        // Title / Name of the product
                        $("#Name").val(title);
                        // Description
                        $("#Description").val(description);
                        // Ajout de l'image
                        $("#displayImage").attr("src", link);
                    }
                    catch (e) {
                        alert("Un problème est en cours avec la recherche automatique, veuillez réessayer plus tard :). En attendant, vous pouvez toujours entrer les informations à la main ;).");
                        console.log("Problème dans la récupération des données");
                        //TODO : Logguer l'erreur
                    }

                    SearchTerminate();
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert("Un problème est en cours avec la recherche automatique, veuillez réessayer plus tard :). En attendant, vous pouvez toujours entrer les informations à la main ;).");
                    console.log("Problème dans le retour diffbot");
                    SearchTerminate();
                }
            });

            return false;
        });

        function localJsonpCallback(json) {
            if (!json.Error) {
                try {
                    // Fill all variables with returned values
                    var amount = ('amount' in data.products[0].offerPriceDetails) ? data.products[0].offerPriceDetails.amount : '0';
                    var link = ('link' in data.products[0].media[0]) ? data.products[0].media[0].link : '';
                    var title = ('title' in data.products[0]) ? data.products[0].title : '';
                    var description = ('description' in data.products[0]) ? data.products[0].description : '';

                    // Fill all divs with the return of the data

                    // Normalisation du prix en FR
                    var amountNormalizedFr = normalize(amount);

                    // ImageUrl
                    $("#ImageUrl").val(link);
                    // Price
                    $("#Price").val(amountNormalizedFr);
                    // Title / Name of the product
                    $("#Name").val(title);
                    // Description
                    $("#Description").val(description);
                    // Ajout de l'image
                    $("#displayImage").attr("src", link);
                }
                catch (e) {
                    alert("Un problème est en cours avec la recherche automatique, veuillez réessayer plus tard :). En attendant, vous pouvez toujours entrer les informations à la main ;).");
                    console.log("Problème dans la récupération des données");
                    //TODO : Logguer l'erreur
                }

                SearchTerminate();
            }
            else {
                alert("Un problème est en cours avec la recherche automatique, veuillez réessayer plus tard :). En attendant, vous pouvez toujours entrer les informations à la main ;).");
                console.log("Problème dans le retour diffbot : " + json.Message);
                SearchTerminate();
            }
        }

        function Search() {
            // On cache le bouton de recherche
            $('#btnCreateSearchObject').hide();
            // On affiche les champs remplis
            $('#giftInfosCreate').hide();
            // On affiche le bouton d'arret de recherche
            $('#btnStopCreateSearchObject').show();
        }

        function SearchTerminate() {
            // On affiche le bouton de recherche
            $('#btnCreateSearchObject').show();
            // On affiche les champs remplis
            $('#giftInfosCreate').show();
            // On cache le bouton d'arret de recherche
            $('#btnStopCreateSearchObject').hide();

            // On affiche les champs remplis
            $('.createObjectImage').css('visibility', 'visible');
            $('.createObjectName').css('visibility', 'visible');
            $('.createObjectDescription').css('visibility', 'visible');
            $('.createObjectPrice').css('visibility', 'visible');
            $('.createAddObject').css('visibility', 'visible');
        }

        function InitSearch() {
            // On affiche le bouton de recherche
            $('#btnCreateSearchObject').show();
            // On cache le bouton d'arret de recherche
            $('#btnStopCreateSearchObject').hide();

            var isValid = '@(ViewData.ModelState.IsValid ? "true" : "false")';
            // Si c'est un retour avec erreur, ne pas cacher les champs
            if (isValid == "true") {
            // On cache également les champs non utile pour le moment
            $('.createObjectImage').css('visibility', 'hidden');
            $('.createObjectName').css('visibility', 'hidden');
            $('.createObjectDescription').css('visibility', 'hidden');
            $('.createObjectPrice').css('visibility', 'hidden');
            $('.createAddObject').css('visibility', 'hidden');
        }
        }

        function normalize(amount) {
            return amount.toString().replace(".", ",");
        }
    });
</script>
