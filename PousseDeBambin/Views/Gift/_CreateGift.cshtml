@model PousseDeBambin.Models.Gift

@Html.ValidationSummary(true)
@Html.AntiForgeryToken()
<fieldset>
    <legend>Nouveau cadeau</legend>

    @Html.HiddenFor(model => model.ListID)

    <div class="editor-label">
        @Html.LabelFor(model => model.WebSite)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.WebSite)
        <a href="#" id="btnCreateSearchObject" class="btn btn-primary btn-sm" role="button">            
            Rechercher
        </a>
        <a href="#" id="btnStopCreateSearchObject">
            <img id="createAjaxLoading" class="ajaxLoadingGift" src="/Content/img/loading/ajax-loader.gif" alt="Loading" />
            Arrêter la recherche
        </a>
        <p class="texte_fonction_recherche">Ce bouton vous permet de rechercher automatiquement les informations liées à l'objet.</p>
        @Html.ValidationMessageFor(model => model.WebSite)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.ImageUrl)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.ImageUrl)
        @Html.ValidationMessageFor(model => model.ImageUrl)
    </div>

    <img id="displayImage">

    <div class="editor-label">
        @Html.LabelFor(model => model.Price)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Price)
        @Html.ValidationMessageFor(model => model.Price)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.Name)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Name)
        @Html.ValidationMessageFor(model => model.Name)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.Description)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Description)
        @Html.ValidationMessageFor(model => model.Description)
    </div>
    <div class="spaceTop">
        <input type="submit" class="btn btn-success_validate" value="J'ajoute ce cadeau" />
    </div>
</fieldset>


<script>
    $(function () {
        var searchAjax = null;
        // On init les boutons de recherche
        SearchTerminate();

        // Lorsque l'on clique sur le bouton d'arret de la recherche
        $("#btnStopCreateSearchObject").click(function () {
            if (searchAjax) {
                // On annule la requete de recherche
                searchAjax.abort();
                searchAjax = null;

                // On réaffiche le bouton de recherches
                SearchTerminate();
            }
        });

        // Lorsque l'on clique sur le bouton de recherche de l'objet en création
        $("#btnCreateSearchObject").click(function () {
            // On affiche le bouton pour stopper la recherche
            Search();

            // We get the website
            var website = $('#createPart #WebSite').val();

            // Loading
            searchAjax = $.ajax({
                url: 'http://api.diffbot.com/v2/product',
                crossDomain: true,
                data: { 'token': '2d5a54f7471c7958ae0c4d3dcdcd5592', 'url': website },
                dataType: 'json',
                type: 'GET',
                success: function (data) {
                    // Fill all divs with the return of the data
                    
                    // Normalisation du prix en FR
                    var amountNormalizedFr = normalize(data.products[0].offerPriceDetails.amount);

                    // ImageUrl
                    $("#createPart #ImageUrl").val(data.products[0].media[0].link);
                    // Price
                    $("#createPart #Price").val(amountNormalizedFr);
                    // Title / Name of the product
                    $("#createPart #Name").val(data.products[0].title);
                    // Description
                    $("#createPart #Description").val(data.products[0].description);
                    // Ajout de l'image
                    $("#displayImage").attr("src", data.products[0].media[0].link);

                    SearchTerminate();
                },
                error: function (jqXHR, textStatus, errorThrown)
                {
                    alert("Un problème est en cours avec la recherche automatique, veuillez réessayer plus tard :). En attendant, vous pouvez toujours entrer les informations à la main ;).");
                    
                    SearchTerminate();
                }
            });

            return false;
        });

        function Search(){
            // On cache le bouton de recherche
            $('#btnCreateSearchObject').hide();
            // On affiche le bouton d'arret de recherche
            $('#btnStopCreateSearchObject').show();
        }

        function SearchTerminate(){
            // On affiche le bouton de recherche
            $('#btnCreateSearchObject').show();
            // On cache le bouton d'arret de recherche
            $('#btnStopCreateSearchObject').hide();
        }

        function normalize(amount) {
            return amount.toString().replace(".", ",");
        }
    });
</script>